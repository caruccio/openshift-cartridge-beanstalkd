#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH
SERVICE_NAME=Beanstalkd

function _start_service()
{
	local SERVICE_IP=$OPENSHIFT_BEANSTALKD_IP
	local SERVICE_PORT=$OPENSHIFT_BEANSTALKD_PORT

	if [ "${STUNNEL_DISABLED}" != 'true' ]; then
		SERVICE_IP=$OPENSHIFT_BEANSTALKD_PRIVATE_IP
		SERVICE_PORT=$OPENSHIFT_BEANSTALKD_PRIVATE_PORT
		stunnel ${OPENSHIFT_BEANSTALKD_DIR}/conf/stunnel.conf
	fi

	nohup supervisor -i . -x /usr/bin/env -- \
		$OPENSHIFT_BEANSTALKD_DIR/usr/versions/$BEANSTALKD_VERSION/bin/beanstalkd \
			-l $SERVICE_IP \
			-p $SERVICE_PORT \
			-b $OPENSHIFT_DATA_DIR/wal \
			-f 1000 \
		|& /usr/bin/logshifter -tag beanstalkd &
}

function _log() {
	echo "$@" | /usr/bin/logshifter -tag beanstalkd
}

function _read_pid() {
	/sbin/pidof node
}

function _read_stunnel_pid() {
	if [ -f $OPENSHIFT_BEANSTALKD_DIR/run/stunnel.pid ]; then
		echo $(<$OPENSHIFT_BEANSTALKD_DIR/run/stunnel.pid)
	fi
}

function _isrunning() {
	_read_pid
}

function _isstunnelrunning() {
	local pid=`_read_stunnel_pid`
	kill -0 "$pid" 2>/dev/null || return 1
}

function start() {
	if ! _isrunning; then
		_start_service

		if [ $? -ne 0 ]; then
			client_message "$SERVICE_NAME has failed to start"
			exit 1
		fi
	else
		client_result "$SERVICE_NAME already running"
	fi
}

function stop() {
	local pid=`_read_pid`

	if [ -n "$pid" ]; then
		if kill "$pid" 2>/dev/null; then
			_log "$SERVICE_NAME stopped"
		fi
	else
		client_result "$SERVICE_NAME already stopped"
	fi
}

case "$1" in
	start)
		start
	;;
	stop)
		stop
	;;
	restart)
		stop
		start
	;;
	status)
		if _isrunning
		then
			client_result "$SERVICE_NAME is running"
		else
			client_result "$SERVICE_NAME is stopped"
		fi
		if [ "${STUNNEL_DISABLED}" != 'true' ] && _isstunnelrunning
		then
			client_result "Stunnel is running"
		else
			client_result "Stunnel is stopped"
		fi
		exit 0
	;;
esac
